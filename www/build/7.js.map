{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ServicioService } from \"../../app/servicio.service\";\n\nimport { User } from '../../providers';\nimport { MainPage } from '../';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n\n  loginForm: FormGroup;\n  loginError: string;\n  account: { email: string, password: string } = {\n    email: 'edycarreyes@gmail.com',\n    password: '123123'\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public fb: FormBuilder,\n    public servicio: ServicioService) {\n\n    this.loginForm = fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n  login() {\n    this.servicio.loginEmail(this.account.email, this.account.password).then((user) => {\n      this.navCtrl.push('TabsPage');\n      const toast = this.toastCtrl.create({\n        message: `Bienvenido ${this.servicio.afAuth.auth.currentUser.email}`,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    }).catch((err) => {\n      switch (err.code) {\n        case 'auth/user-not-found':\n          const toast = this.toastCtrl.create({\n            message: 'Este email no corresponde a ninguna cuenta registrada.',\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present();\n          break;\n        case 'auth/wrong-password':\n          const toast2 = this.toastCtrl.create({\n            message: 'La contraseña es inválida o el usuario no posee contraseña.',\n            duration: 3000,\n            position: 'top'\n          });\n          toast2.present();\n          break;\n        default:\n          const toastdefault = this.toastCtrl.create({\n            message: err,\n            duration: 3000,\n            position: 'top'\n          });\n          toastdefault.present();\n      }\n      console.log(err);\n    });\n  }\n  // Attempt to login in through our User service\n  doLogin() {\n    this.user.login(this.account).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}